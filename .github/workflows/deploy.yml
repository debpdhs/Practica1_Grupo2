name: Deploy Infrastructure

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout c√≥digo
      uses: actions/checkout@v4
      
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build imagen Docker
      run: |
        docker build -t practica1-grupo2:${{ github.sha }} .
        docker tag practica1-grupo2:${{ github.sha }} practica1-grupo2:latest
        
    - name: Test imagen Docker
      run: |
        # Iniciar contenedor para testing
        docker run -d --name test-container -p 8080:80 practica1-grupo2:latest
        sleep 10
        
        # Verificar que la aplicaci√≥n responde
        curl -f http://localhost:8080 || exit 1
        
        # Limpiar
        docker stop test-container
        docker rm test-container
        
    - name: Validar estructura de archivos
      run: |
        test -f Dockerfile || exit 1
        test -f docker-compose.yml || exit 1
        test -f src/index.html || exit 1
        test -f infrastructure/scripts/deploy.sh || exit 1
        echo "‚úÖ Todos los archivos necesarios est√°n presentes"

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout c√≥digo
      uses: actions/checkout@v4
      
    - name: Deploy Infrastructure
      run: |
        echo "üöÄ Desplegando infraestructura..."
        # En un entorno real, aqu√≠ se ejecutar√≠an los scripts de despliegue
        # ./infrastructure/scripts/deploy.sh
        echo "‚úÖ Despliegue simulado completado"